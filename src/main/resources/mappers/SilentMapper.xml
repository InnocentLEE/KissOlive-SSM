<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.xgun.kissolive.dao.SilentMapper" >
  <!-- 购物车模块 -->
  <insert id="insertNewCard" parameterType="org.xgun.kissolive.pojo.Card">
    INSERT INTO tb_card (user_id, goods_id, num, updatetime)
    VALUES (#{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
      #{num,jdbcType=INTEGER}, now())
  </insert>
  
  <select id="checkCard" parameterType="org.xgun.kissolive.pojo.Card" resultType="Integer">
    SELECT num
    FROM tb_card
    WHERE user_id = #{userId,jdbcType=INTEGER}
    AND goods_id = #{goodsId,jdbcType=INTEGER}
    LIMIT 1
  </select>

  <select id="selectMyCard" resultType="org.xgun.kissolive.vo.CardInfo">
    SELECT c.id 'cardId', g.id'goodsId', c.num'num', p.img_url'imgUrl', b.name 'brandName',
      p.name 'productionName',g.color_name 'colorName', g.color_code 'colorCode', g.price 'price',
	  g.status 'status', c.updatetime'updateTime'
    FROM tb_card c
    LEFT JOIN tb_goods g ON c.goods_id = g.id
    LEFT JOIN tb_production p ON g.production_id = p.id
    LEFT JOIN tb_brand b ON p.brand_id = b.id
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </select>

  <update id="updateCard" parameterType="org.xgun.kissolive.pojo.Card">
    UPDATE tb_card
    SET num = num + #{num,jdbcType=INTEGER}, updatetime = now()
    WHERE user_id = #{userId,jdbcType=INTEGER}
    AND goods_id = #{goodsId,jdbcType=INTEGER}
  </update>

  <delete id="deleteCardByBatch">
    DELETE FROM tb_card
    WHERE id IN
    <foreach collection="cardIds" item="cardId" index="index" open="(" separator="," close=")">
      #{cardId}
    </foreach>
    AND user_id = #{userId}
  </delete>
  
  <!-- 活动模块 -->
  <resultMap id="activityMenuInfoMap" type="org.xgun.kissolive.vo.ActivityMenuInfo">
    <id column="id" property="activityId"/>
    <result column="title" property="title"/>
    <result column="begintime" property="beginTime"/>
    <result column="endtime" property="endTime"/>
    <collection property="vipList" ofType="org.xgun.kissolive.pojo.VipLevel" select="selectActivityVipLevel"
                column="id">
    </collection>
  </resultMap>

  <insert id="insertActivity" parameterType="org.xgun.kissolive.pojo.Activity"
          useGeneratedKeys="true" keyProperty="id">
    INSERT INTO tb_activity (title, img_url, detail, begintime, endtime, updatetime)
    VALUES (#{title,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR},
    #{detail,jdbcType=VARCHAR}, #{begintime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP},
    now())
  </insert>

  <insert id="insertActivityLevel">
    INSERT INTO tb_activity_vip(activity_id, vip_id)
    VALUES
    <foreach collection="vipIds" index="index" item="vipId" separator="), (" open="(" close=")">
      #{activityId}, #{vipId}
    </foreach>
  </insert>

  <insert id="insertActivityGoods">
    INSERT INTO tb_activity_goods(activity_id, goods_id, price, updatetime)
    VALUES
    <foreach collection="goods" index="index" item="good" separator="), (" open="(" close=")">
      #{activityId}, #{good.goodsId}, #{good.price}, now()
    </foreach>
    ON DUPLICATE KEY UPDATE
    price = VALUES(price),
    updatetime = now()
  </insert>

  <select id="selectActivityCount" resultType="Integer">
    SELECT Count(*) as totalNum
    FROM tb_activity
  </select>

  <select id="selectActivityMenu" resultMap="activityMenuInfoMap">
    SELECT id, title, begintime, endtime
    FROM tb_activity
    ORDER BY id DESC
    LIMIT #{index} , #{num}
  </select>

  <select id="selectActivityVipLevel" parameterType="int" resultType="org.xgun.kissolive.pojo.VipLevel">
    SELECT vl.id 'id', vl.logo_url 'logoUrl'
    FROM tb_activity_vip av
    LEFT JOIN tb_vip_level vl ON av.vip_id = vl.id
    WHERE av.activity_id = #{id}
  </select>

  <select id="selectActivity" resultType="org.xgun.kissolive.pojo.Activity">
    SELECT id, title, img_url 'imgUrl', detail, begintime, endtime, updatetime
    FROM tb_activity
    WHERE id = #{activityId}
  </select>

  <select id="selectActivityGoods" resultType="org.xgun.kissolive.pojo.ActivityGoods">
    SELECT activity_id 'activityId', goods_id 'goodsId', price, updatetime
    FROM tb_activity_goods
    WHERE activity_id = #{activityId}
    ORDER BY updatetime DESC
  </select>

  <select id="selectActivityGoodsInfo" resultType="org.xgun.kissolive.vo.ActivityGoodsInfo" >
    SELECT ag.activity_id 'activityId', ag.goods_id'goodsId', p.img_url'imgUrl',b.name 'brandName',
      p.name 'productionName',g.color_name 'colorName', g.color_code 'colorCode', g.price 'oldPrice',
      ag.price 'nowPrice', g.status 'status', ag.updatetime'updateTime'
	FROM tb_activity_goods ag
	LEFT JOIN tb_goods g ON ag.goods_id = g.id
    LEFT JOIN tb_production p ON g.production_id = p.id
    LEFT JOIN tb_brand b ON p.brand_id = b.id
    WHERE ag.activity_id = #{activityId}
  </select>

  <update id="updateActivity" parameterType="org.xgun.kissolive.pojo.Activity">
    UPDATE tb_activity
    <set>
      <if test="title != null">title = #{title,jdbcType=VARCHAR}, </if>
      <if test="imgUrl != null"> img_url = #{imgUrl,jdbcType=VARCHAR}, </if>
      <if test="detail != null"> detail = #{detail,jdbcType=VARCHAR}, </if>
      <if test="begintime != null"> begintime = #{begintime,jdbcType=TIMESTAMP}, </if>
      <if test="endtime != null"> endtime = #{endtime,jdbcType=TIMESTAMP}, </if>
      <if test="true">updatetime = now(), </if>
    </set>
    WHERE id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateActivityGoods">
    UPDATE tb_activity_goods
    SET updatetime = now(),
        price = CAST goods_id
    <foreach collection="goods" item="good" index="good" close=" END">
      WHEN #{good.goodsId} THEN #{good.price}
    </foreach>
    WHERE activity_id IN 
    <foreach collection="goods" item="good" index="good" open="(" separator=", " close=")">
      #{good.activityId}
    </foreach>
  </update>

  <delete id="deleteActivity">
    DELETE FROM tb_activity
    WHERE id IN
    <foreach collection="activityIds" item="activityId" index="index" open="(" separator="," close=")">
      #{activityId}
    </foreach>
  </delete>

  <delete id="deleteActivityLevel">
    DELETE FROM tb_activity_vip
    WHERE activity_id IN
    <foreach collection="activityIds" item="activityId" index="index" open="(" separator="," close=")">
      #{activityId}
    </foreach>
  </delete>

  <delete id="deleteActivityGoods">
    DELETE FROM tb_activity_goods
    WHERE activity_id IN
    <foreach collection="activityIds" item="activityId" index="index" open="(" separator="," close=")">
      #{activityId}
    </foreach>
  </delete>

  <!-- 数据统计模块 -->
  <resultMap id="productionShopNumOfBrandMap" type="org.xgun.kissolive.vo.BrandProductionShopInfo">
    <id column="id" property="id"/>
    <result column="year" property="year"/>
    <result column="month" property="month"/>
    <result column="brandname" property="name"/>
    <result column="imgUrl" property="imgUrl"/>
    <result column="status" property="status"/>
    <result column="productionNum" property="productionNum"/>
    <collection property="productionList" ofType="ProductionShopInfo" select="ProductionShopInfo"
                column="{id=id,year=year,month=month}">
    </collection>
  </resultMap>

  <select id="selectBrandShopInfo" resultMap="productionShopNumOfBrandMap">
    SELECT b.id as id, ${year} as year, ${month} as month, b.name as brandname, b.img_url as imgUrl,
           b.status as status, COUNT(p.id) as productionNum
    FROM tb_brand b
    LEFT JOIN tb_production p ON p.brand_id = b.id
    GROUP BY b.id
    ORDER BY b.id
  </select>

  <select id="ProductionShopInfo" resultType="org.xgun.kissolive.vo.ProductionShopInfo">
    SELECT p.id as id, p.name as name, p.img_url as imgUrl, SUM(oi.number) as num
    FROM tb_production p
    LEFT JOIN tb_goods g ON g.production_id = p.id
    LEFT JOIN tb_order_item oi ON oi.goods_id = g.id
    LEFT JOIN tb_order o ON o.id = oi.order_id
    WHERE p.id = #{id}
    AND o.status > 0
    AND o.`time`
  	BETWEEN STR_TO_DATE(CONCAT(#{year},'-',#{month},'-01'),'%Y-%m-%d')
    and DATE_ADD(STR_TO_DATE(CONCAT(#{year},'-',#{month},'-01'),'%Y-%m-%d'),INTERVAL '1' MONTH)
  </select>

  <select id="selectSalesByMonth" resultType="org.xgun.kissolive.vo.SalesCountByMonth">
  	SELECT DATE_FORMAT(`time`,'%m') as month , price
  	FROM tb_order
  	WHERE `time`
  	BETWEEN str_to_date(CONCAT(#{year},'-01-01 00:00:00'), '%Y-%m-%d %H:%i:%s')
  	AND str_to_date(CONCAT(#{year},'-12-31 23:59:59'), '%Y-%m-%d %H:%i:%s')
  	AND status > 0
  	GROUP BY month
  </select>

  <select id="selectPShopByRank" resultType="org.xgun.kissolive.vo.ProductionNum">
  	SELECT p.id as productionId , p.name as productionName , SUM(oi.`number`) as num
  	FROM tb_order_item oi
  	LEFT JOIN tb_order o ON oi.order_id = o.id
  	LEFT JOIN tb_goods g ON g.id = oi.goods_id
  	LEFT JOIN tb_production p ON g.production_id = p.id
  	WHERE o.status > 0
  	GROUP BY productionId
  	ORDER BY num DESC
  	LIMIT #{num}
  </select>

  <select id="selectShopInfoByPOneYear" resultType="org.xgun.kissolive.vo.ShopCountByMonth">
  	SELECT DATE_FORMAT(o.`time`,'%m') as months , SUM(oi.`number`) as num
  	FROM tb_order_item oi
  	LEFT JOIN tb_order o ON oi.order_id = o.id
  	LEFT JOIN tb_goods g ON g.id = oi.goods_id
  	LEFT JOIN tb_production p ON g.production_id = p.id
  	WHERE p.id = #{productionId}
		AND o.`time`
		BETWEEN str_to_date(CONCAT(#{year},'-01-01 00:00:00'), '%Y-%m-%d %H:%i:%s')
  	AND str_to_date(CONCAT(#{year},'-12-31 23:59:59'), '%Y-%m-%d %H:%i:%s')
		GROUP BY months
  </select>

  <select id="selectPCardByRank" resultType="org.xgun.kissolive.vo.ProductionNum">
    SELECT p.id as productionId , p.name as productionName , SUM(tc.num) as num
    FROM tb_card tc
    LEFT JOIN tb_goods g ON g.id = tc.goods_id
    LEFT JOIN tb_production p ON g.production_id = p.id
    GROUP BY productionId
    ORDER BY num DESC
  	LIMIT #{num}
  </select>

  <select id="selectPBrowseByRank" resultType="org.xgun.kissolive.vo.ProductionNum">
    SELECT p.id as productionId , p.name as productionName , COUNT(tbc.user_id) as num
    FROM tb_browse_count tbc
    LEFT JOIN tb_production p ON tbc.production_id = p.id
    GROUP BY productionId
    ORDER BY num DESC
  	LIMIT #{num}
  </select>
  
  <!-- 客服模块 -->
  <select id="selectNewMessageNum" resultType="Integer">
    SELECT COUNT(1)
    FROM tb_chat_message
    WHERE user_id = #{userId}
    AND source = 2
    AND status = 0
  </select>

  <select id="selectAllMessage" resultType="org.xgun.kissolive.pojo.ChatMessage">
    SELECT *
    FROM tb_chat_message
    WHERE user_id = #{userId}
    <if test="status != null">
    AND status = #{status}
    </if>
    <if test="source != null">
      AND source  = #{source}
    </if>
    ORDER BY updatetime ASC
  </select>
  
  <insert id="sendingNewMessage" parameterType="org.xgun.kissolive.pojo.ChatMessage">
    INSERT INTO tb_chat_message(message, status, user_id, source, updatetime)
    VALUES (#{message,jdbcType=VARCHAR}, 0, #{userId,jdbcType=INTEGER},
            #{source,jdbcType=INTEGER}, now())
  </insert>

  <update id="setMessageStatus">
    UPDATE tb_chat_message
    SET status = 1
    WHERE user_id = #{userId}
    AND source = #{source}
    AND status = 0
  </update>

  <select id="getChatUserList" resultType="org.xgun.kissolive.vo.ChatUserList">
    SELECT cm.user_id 'userId', u.username 'name', u.img_url 'imgUrl' , COUNT(IF(cm.status=0,true,null)) as num
    FROM tb_chat_message cm
    LEFT JOIN tb_user u ON u.id = cm.user_id
    WHERE cm.source = 1
    GROUP BY cm.user_id
    ORDER BY num DESC,updatetime
  </select>

  <delete id="deleteMessage">
    DELETE FROM tb_chat_message
    WHERE status = 1
    AND updatetime &lt; #{updatetime,jdbcType=TIMESTAMP}
  </delete>

</mapper>